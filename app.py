import streamlit as st
from fpdf import FPDF
import pandas as pd
import datetime

def score_horyzont(horyzont):
    try:
        h = int(horyzont)
        if h <= 7:
            return 1
        elif h <= 15:
            return 2
        elif h <= 25:
            return 3
        else:
            return 4
    except:
        return 0

def calculate_ri(data):
    score = 0
    score += {"PoczÄ…tkujÄ…cy": 3, "Åšredniozaawansowany": 2, "Zaawansowany": 1}.get(data["wiedza"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["edukacja"], 0)
    priorytety_scores = {
        "TrwaÅ‚oÅ›Ä‡ wartoÅ›ci i ochrona siÅ‚y nabywczej": 4,
        "Wzrost wartoÅ›ci i potencjaÅ‚ zysku": 1,
        "PÅ‚ynnoÅ›Ä‡ i dostÄ™pnoÅ›Ä‡ Å›rodkÃ³w": 2,
        "PeÅ‚na niezaleÅ¼noÅ›Ä‡ systemowa i poufnoÅ›Ä‡": 3
    }
    score += sum([priorytety_scores.get(p, 0) for p in data["priorytety"]])
    score += {"Tak": 2, "Nie": 1}.get(data["wlasnosc"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["sprzedaz"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["sukcesja"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["aktywa"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["dodatkowa_alokacja"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["niezaleznosc"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["poza_systemem"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["swiadomosc"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["wsparcie_podatki"], 0)
    score += score_horyzont(data["horyzont_budowy"])
    score += {"Tak": 2, "Nie": 1}.get(data["pokolenia"], 0)
    score += int(data["dynamika"])
    score += {"Tak": 2, "Nie": 1}.get(data["otwartosc"], 0)
    score += {"Niski": 3, "Umiarkowany": 2, "Wysoki": 1}.get(data["ryzyko"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["zwiÄ™kszanie_kwot"], 0)
    score += {"Jednorazowa": 1, "Plan alokacji": 2}.get(data["plan"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["firma"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["zysk_prywatny"], 0)
    score += {"Tak": 2, "Nie": 1}.get(data["decyzyjnosc"], 0)
    return score

def generate_pdf(data):
    pdf = FPDF()
    pdf.add_page()
    pdf.add_font('DejaVu', '', 'DejaVuSans.ttf', uni=True)
    pdf.set_font('DejaVu', '', 12)
    pdf.cell(200, 10, txt="Brief Strategii Budowania MajÄ…tku", ln=True, align='C')
    pdf.cell(200, 10, txt=f"Data: {datetime.date.today()}", ln=True)
    pdf.ln(10)
    for k, v in data.items():
        pdf.multi_cell(0, 10, f"{k}: {v if v else 'â€”'}")
    filename = f"brief_{datetime.datetime.now().strftime('%Y%m%d_%H%M')}.pdf"
    pdf.output(filename)
    return filename

def generate_csv(data):
    df = pd.DataFrame(data.items(), columns=["Pytanie", "OdpowiedÅº"])
    filename = f"brief_{datetime.datetime.now().strftime('%Y%m%d_%H%M')}.csv"
    df.to_csv(filename, index=False)
    return filename

def main():
    st.set_page_config(page_title="Brief Strategii MajÄ…tku")
    st.title("ðŸ“˜ Brief Strategii Budowania MajÄ…tku z Rating Index")

    wiedza = st.radio("Jak ocenia Pan/Pani swojÄ… wiedzÄ™ na temat inwestycji?", ["PoczÄ…tkujÄ…cy", "Åšredniozaawansowany", "Zaawansowany"])
    edukacja = st.radio("Czy jest Pan/Pani zainteresowany/a wsparciem edukacyjnym?", ["Tak", "Nie"])
    priorytety = st.multiselect("Co jest dla PaÅ„stwa najwaÅ¼niejsze?", [
        "TrwaÅ‚oÅ›Ä‡ wartoÅ›ci i ochrona siÅ‚y nabywczej",
        "Wzrost wartoÅ›ci i potencjaÅ‚ zysku",
        "PÅ‚ynnoÅ›Ä‡ i dostÄ™pnoÅ›Ä‡ Å›rodkÃ³w",
        "PeÅ‚na niezaleÅ¼noÅ›Ä‡ systemowa i poufnoÅ›Ä‡"])
    wlasnosc = st.radio("Czy zaleÅ¼y PaÅ„stwu na peÅ‚nej wÅ‚asnoÅ›ci fizycznego metalu?", ["Tak", "Nie"])
    sprzedaz = st.radio("Czy waÅ¼na jest moÅ¼liwoÅ›Ä‡ czÄ™Å›ciowej sprzedaÅ¼y?", ["Tak", "Nie"])
    sukcesja = st.radio("Czy interesujÄ… PaÅ„stwa rozwiÄ…zania sukcesyjne?", ["Tak", "Nie"])
    aktywa = st.radio("Czy posiadajÄ… PaÅ„stwo inne aktywa moÅ¼liwe do konwersji w metale?", ["Tak", "Nie"])
    dodatkowa_alokacja = st.radio("Czy rozwaÅ¼ajÄ… PaÅ„stwo dodatkowÄ… alokacjÄ™ kapitaÅ‚u?", ["Tak", "Nie"])
    niezaleznosc = st.radio("Czy ceniÄ… PaÅ„stwo niezaleÅ¼noÅ›Ä‡ i poufnoÅ›Ä‡?", ["Tak", "Nie"])
    poza_systemem = st.radio("GotowoÅ›Ä‡ do dziaÅ‚ania poza systemem bankowym?", ["Tak", "Nie"])
    swiadomosc = st.radio("Czy sÄ… PaÅ„stwo Å›wiadomi kwestii podatkowych?", ["Tak", "Nie"])
    wsparcie_podatki = st.radio("Czy potrzebujÄ… PaÅ„stwo wsparcia podatkowego?", ["Tak", "Nie"])
    horyzont_budowy = st.text_input("Horyzont budowy majÄ…tku (np. 15 lat):")
    pokolenia = st.radio("Czy budujÄ… PaÅ„stwo majÄ…tek z myÅ›lÄ… o kolejnych pokoleniach?", ["Tak", "Nie"])
    dynamika = st.slider("Styl budowania majÄ…tku (DBM)", 1, 5, 3)
    otwartosc = st.radio("OtwartoÅ›Ä‡ na zwiÄ™kszenie zakupÃ³w w przyszÅ‚oÅ›ci?", ["Tak", "Nie"])
    ryzyko = st.radio("Akceptowalny poziom ryzyka?", ["Niski", "Umiarkowany", "Wysoki"])
    zwiÄ™kszanie_kwot = st.radio("Czy planujÄ… PaÅ„stwo zwiÄ™kszyÄ‡ kwoty w przyszÅ‚oÅ›ci?", ["Tak", "Nie"])
    plan = st.radio("Czy to jednorazowa kwota, czy czÄ™Å›Ä‡ wiÄ™kszego planu?", ["Jednorazowa", "Plan alokacji"])
    firma = st.radio("Czy prowadzÄ… PaÅ„stwo dziaÅ‚alnoÅ›Ä‡ gospodarczÄ…?", ["Tak", "Nie"])
    zysk_prywatny = st.radio("Czy chcÄ… PaÅ„stwo budowaÄ‡ majÄ…tek z zyskÃ³w firmy?", ["Tak", "Nie"])
    decyzyjnosc = st.radio("Czy samodzielnie decydujÄ… PaÅ„stwo o swoich pieniÄ…dzach?", ["Tak", "Nie"])

    data = locals()
    data_dict = {k: v for k, v in data.items() if k not in ["st", "pd", "datetime", "FPDF", "generate_pdf", "generate_csv", "main", "score_horyzont", "calculate_ri"]}
    ri_score = calculate_ri(data_dict)
    data_dict["Rating Index"] = ri_score

    st.markdown(f"## ðŸ“Š Rating Index (RI): **{ri_score}**")

    if st.button("ðŸ“„ Generuj PDF i CSV"):
        pdf_file = generate_pdf(data_dict)
        csv_file = generate_csv(data_dict)

        with open(pdf_file, "rb") as f:
            st.download_button("ðŸ“¥ Pobierz PDF", f, file_name=pdf_file, mime="application/pdf")

        with open(csv_file, "rb") as f:
            st.download_button("ðŸ“¥ Pobierz CSV", f, file_name=csv_file, mime="text/csv")

if __name__ == "__main__":
    main()
